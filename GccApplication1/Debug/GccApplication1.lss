
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000048c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000438  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000048c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004bc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000004fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a24  00000000  00000000  0000052c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000836  00000000  00000000  00000f50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003c9  00000000  00000000  00001786  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000006c  00000000  00000000  00001b50  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000417  00000000  00000000  00001bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000233  00000000  00000000  00001fd3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00002206  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
   8:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
   c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  10:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  14:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  18:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  1c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  20:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  24:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  28:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  2c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  30:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  34:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  38:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  3c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  40:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  44:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  48:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  4c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  50:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  54:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  58:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  5c:	93 00       	.word	0x0093	; ????
  5e:	b3 00       	.word	0x00b3	; ????
  60:	c4 00       	.word	0x00c4	; ????
  62:	e4 00       	.word	0x00e4	; ????
  64:	04 01       	movw	r0, r8
  66:	1d 01       	movw	r2, r26
  68:	45 01       	movw	r8, r10
  6a:	6d 01       	movw	r12, r26
  6c:	82 01       	movw	r16, r4
  6e:	aa 01       	movw	r20, r20

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61
  7c:	0e 94 da 01 	call	0x3b4	; 0x3b4 <main>
  80:	0c 94 1a 02 	jmp	0x434	; 0x434 <_exit>

00000084 <__bad_interrupt>:
  84:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000088 <setupLCD>:
#include <stdint.h>

void setupLCD(void) {
	// Enable. Low power wave form.
	//LCDCRA = (LCDEN<<1) | (LCDAB<<1);
	LCDCRA = 0xc0;
  88:	80 ec       	ldi	r24, 0xC0	; 192
  8a:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
	// External clock. 1/4 Duty. 25 segments port mask
	//LCDCRB = (LCDCS<<1) | (LCDMUX1<<1) | (LCDMUX0<<1) | (LCDPM2<<1) | (LCDPM1<<1) | (LCDPM0<<1);
	LCDCRB = 0xb7;//= 0xa6;
  8e:	87 eb       	ldi	r24, 0xB7	; 183
  90:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
	// Frame rate
	//LCDFRR = (LCDCD2<<1) | (LCDCD1<<1) | (LCDCD0<<1);
	LCDFRR = 0x06;
  94:	86 e0       	ldi	r24, 0x06	; 6
  96:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
	// Drive time 300?s. Contrast 3,35V
	//LCDCCR = (LCDCC3<<1) | (LCDCC2<<1) | (LCDCC1<<1) | (LCDCC0<<1);
	LCDCCR = 0x0f;
  9a:	8f e0       	ldi	r24, 0x0F	; 15
  9c:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
  a0:	08 95       	ret

000000a2 <writeChar>:
}

void writeChar(char ch, uint16_t pos) {
  a2:	cf 92       	push	r12
  a4:	df 92       	push	r13
  a6:	ef 92       	push	r14
  a8:	ff 92       	push	r15
  aa:	0f 93       	push	r16
  ac:	1f 93       	push	r17
  ae:	cf 93       	push	r28
  b0:	df 93       	push	r29
  b2:	c8 2e       	mov	r12, r24
	if (pos > 5) {
  b4:	66 30       	cpi	r22, 0x06	; 6
  b6:	71 05       	cpc	r23, r1
  b8:	08 f0       	brcs	.+2      	; 0xbc <writeChar+0x1a>
  ba:	73 c1       	rjmp	.+742    	; 0x3a2 <writeChar+0x300>
		return;
	}
	int shift = pos%2 ? 4 : 0;
  bc:	60 fd       	sbrc	r22, 0
  be:	03 c0       	rjmp	.+6      	; 0xc6 <writeChar+0x24>
  c0:	90 e0       	ldi	r25, 0x00	; 0
	int shift2 = pos%2 ? 0 : 4;
  c2:	84 e0       	ldi	r24, 0x04	; 4
  c4:	02 c0       	rjmp	.+4      	; 0xca <writeChar+0x28>

void writeChar(char ch, uint16_t pos) {
	if (pos > 5) {
		return;
	}
	int shift = pos%2 ? 4 : 0;
  c6:	94 e0       	ldi	r25, 0x04	; 4
	int shift2 = pos%2 ? 0 : 4;
  c8:	80 e0       	ldi	r24, 0x00	; 0

	uint8_t *d1 = &LCDDR0;
	uint8_t *d2 = &LCDDR5;
	uint8_t *d3 = &LCDDR10;
	uint8_t *d4 = &LCDDR15;
	d1 += pos/2;
  ca:	76 95       	lsr	r23
  cc:	67 95       	ror	r22
  ce:	8b 01       	movw	r16, r22
  d0:	04 51       	subi	r16, 0x14	; 20
  d2:	1f 4f       	sbci	r17, 0xFF	; 255
	d2 += pos/2;
  d4:	ab 01       	movw	r20, r22
  d6:	4f 50       	subi	r20, 0x0F	; 15
  d8:	5f 4f       	sbci	r21, 0xFF	; 255
	d3 += pos/2;
  da:	eb 01       	movw	r28, r22
  dc:	ca 50       	subi	r28, 0x0A	; 10
  de:	df 4f       	sbci	r29, 0xFF	; 255
	d4 += pos/2;
  e0:	db 01       	movw	r26, r22
  e2:	a5 50       	subi	r26, 0x05	; 5
  e4:	bf 4f       	sbci	r27, 0xFF	; 255
	
	// Blank the new number
	*d1 &= (0xf<<shift2);
  e6:	2f e0       	ldi	r18, 0x0F	; 15
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <writeChar+0x4e>
  ec:	22 0f       	add	r18, r18
  ee:	33 1f       	adc	r19, r19
  f0:	8a 95       	dec	r24
  f2:	e2 f7       	brpl	.-8      	; 0xec <writeChar+0x4a>
  f4:	f8 01       	movw	r30, r16
  f6:	80 81       	ld	r24, Z
  f8:	82 23       	and	r24, r18
  fa:	80 83       	st	Z, r24
	*d2 &= (0xf<<shift2);
  fc:	fa 01       	movw	r30, r20
  fe:	80 81       	ld	r24, Z
 100:	82 23       	and	r24, r18
 102:	80 83       	st	Z, r24
	*d3 &= (0xf<<shift2);
 104:	88 81       	ld	r24, Y
 106:	82 23       	and	r24, r18
 108:	88 83       	st	Y, r24
	*d4 &= (0xf<<shift2);
 10a:	8c 91       	ld	r24, X
 10c:	28 23       	and	r18, r24
 10e:	2c 93       	st	X, r18

	switch (ch) {
 110:	d1 2c       	mov	r13, r1
 112:	f6 01       	movw	r30, r12
 114:	f0 97       	sbiw	r30, 0x30	; 48
 116:	ea 30       	cpi	r30, 0x0A	; 10
 118:	f1 05       	cpc	r31, r1
 11a:	08 f0       	brcs	.+2      	; 0x11e <writeChar+0x7c>
 11c:	42 c1       	rjmp	.+644    	; 0x3a2 <writeChar+0x300>
 11e:	e2 5d       	subi	r30, 0xD2	; 210
 120:	ff 4f       	sbci	r31, 0xFF	; 255
 122:	0c 94 14 02 	jmp	0x428	; 0x428 <__tablejump2__>
		case '0':
			*d1 |= (0x1<<shift);
 126:	21 e0       	ldi	r18, 0x01	; 1
 128:	30 e0       	ldi	r19, 0x00	; 0
 12a:	09 2e       	mov	r0, r25
 12c:	02 c0       	rjmp	.+4      	; 0x132 <writeChar+0x90>
 12e:	22 0f       	add	r18, r18
 130:	33 1f       	adc	r19, r19
 132:	0a 94       	dec	r0
 134:	e2 f7       	brpl	.-8      	; 0x12e <writeChar+0x8c>
 136:	f8 01       	movw	r30, r16
 138:	80 81       	ld	r24, Z
 13a:	82 2b       	or	r24, r18
 13c:	80 83       	st	Z, r24
			*d2 |= (0x5<<shift);
 13e:	65 e0       	ldi	r22, 0x05	; 5
 140:	70 e0       	ldi	r23, 0x00	; 0
 142:	fb 01       	movw	r30, r22
 144:	02 c0       	rjmp	.+4      	; 0x14a <writeChar+0xa8>
 146:	ee 0f       	add	r30, r30
 148:	ff 1f       	adc	r31, r31
 14a:	9a 95       	dec	r25
 14c:	e2 f7       	brpl	.-8      	; 0x146 <writeChar+0xa4>
 14e:	cf 01       	movw	r24, r30
 150:	fa 01       	movw	r30, r20
 152:	90 81       	ld	r25, Z
 154:	98 2b       	or	r25, r24
 156:	90 83       	st	Z, r25
			*d3 |= (0x5<<shift);
 158:	98 81       	ld	r25, Y
 15a:	89 2b       	or	r24, r25
 15c:	88 83       	st	Y, r24
			*d4 |= (0x1<<shift);
 15e:	8c 91       	ld	r24, X
 160:	28 2b       	or	r18, r24
 162:	2c 93       	st	X, r18
			break;
 164:	1e c1       	rjmp	.+572    	; 0x3a2 <writeChar+0x300>
		case '1':
			*d2 |= (0x1<<shift);
 166:	21 e0       	ldi	r18, 0x01	; 1
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	b9 01       	movw	r22, r18
 16c:	02 c0       	rjmp	.+4      	; 0x172 <writeChar+0xd0>
 16e:	66 0f       	add	r22, r22
 170:	77 1f       	adc	r23, r23
 172:	9a 95       	dec	r25
 174:	e2 f7       	brpl	.-8      	; 0x16e <writeChar+0xcc>
 176:	cb 01       	movw	r24, r22
 178:	fa 01       	movw	r30, r20
 17a:	90 81       	ld	r25, Z
 17c:	98 2b       	or	r25, r24
 17e:	90 83       	st	Z, r25
			*d3 |= (0x1<<shift);
 180:	98 81       	ld	r25, Y
 182:	89 2b       	or	r24, r25
 184:	88 83       	st	Y, r24
			break;
 186:	0d c1       	rjmp	.+538    	; 0x3a2 <writeChar+0x300>
		case '2':
			*d1 |= (0x1<<shift);
 188:	21 e0       	ldi	r18, 0x01	; 1
 18a:	30 e0       	ldi	r19, 0x00	; 0
 18c:	09 2e       	mov	r0, r25
 18e:	02 c0       	rjmp	.+4      	; 0x194 <writeChar+0xf2>
 190:	22 0f       	add	r18, r18
 192:	33 1f       	adc	r19, r19
 194:	0a 94       	dec	r0
 196:	e2 f7       	brpl	.-8      	; 0x190 <writeChar+0xee>
 198:	f8 01       	movw	r30, r16
 19a:	80 81       	ld	r24, Z
 19c:	82 2b       	or	r24, r18
 19e:	80 83       	st	Z, r24
			*d2 |= (0x1<<shift);
 1a0:	fa 01       	movw	r30, r20
 1a2:	80 81       	ld	r24, Z
 1a4:	82 2b       	or	r24, r18
 1a6:	80 83       	st	Z, r24
			*d3 |= (0xe<<shift);
 1a8:	4e e0       	ldi	r20, 0x0E	; 14
 1aa:	50 e0       	ldi	r21, 0x00	; 0
 1ac:	ba 01       	movw	r22, r20
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <writeChar+0x112>
 1b0:	66 0f       	add	r22, r22
 1b2:	77 1f       	adc	r23, r23
 1b4:	9a 95       	dec	r25
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <writeChar+0x10e>
 1b8:	cb 01       	movw	r24, r22
 1ba:	98 81       	ld	r25, Y
 1bc:	89 2b       	or	r24, r25
 1be:	88 83       	st	Y, r24
			*d4 |= (0x1<<shift);
 1c0:	8c 91       	ld	r24, X
 1c2:	28 2b       	or	r18, r24
 1c4:	2c 93       	st	X, r18
			break;
 1c6:	ed c0       	rjmp	.+474    	; 0x3a2 <writeChar+0x300>
		case '3':
			*d1 |= (0x1<<shift);
 1c8:	21 e0       	ldi	r18, 0x01	; 1
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	09 2e       	mov	r0, r25
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <writeChar+0x132>
 1d0:	22 0f       	add	r18, r18
 1d2:	33 1f       	adc	r19, r19
 1d4:	0a 94       	dec	r0
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <writeChar+0x12e>
 1d8:	f8 01       	movw	r30, r16
 1da:	80 81       	ld	r24, Z
 1dc:	82 2b       	or	r24, r18
 1de:	80 83       	st	Z, r24
			*d2 |= (0x1<<shift);
 1e0:	fa 01       	movw	r30, r20
 1e2:	80 81       	ld	r24, Z
 1e4:	82 2b       	or	r24, r18
 1e6:	80 83       	st	Z, r24
			*d3 |= (0xb<<shift);
 1e8:	4b e0       	ldi	r20, 0x0B	; 11
 1ea:	50 e0       	ldi	r21, 0x00	; 0
 1ec:	ba 01       	movw	r22, r20
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <writeChar+0x152>
 1f0:	66 0f       	add	r22, r22
 1f2:	77 1f       	adc	r23, r23
 1f4:	9a 95       	dec	r25
 1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <writeChar+0x14e>
 1f8:	cb 01       	movw	r24, r22
 1fa:	98 81       	ld	r25, Y
 1fc:	89 2b       	or	r24, r25
 1fe:	88 83       	st	Y, r24
			*d4 |= (0x1<<shift);
 200:	8c 91       	ld	r24, X
 202:	28 2b       	or	r18, r24
 204:	2c 93       	st	X, r18
			break;
 206:	cd c0       	rjmp	.+410    	; 0x3a2 <writeChar+0x300>
		case '4':
			*d2 |= (0x5<<shift);
 208:	25 e0       	ldi	r18, 0x05	; 5
 20a:	30 e0       	ldi	r19, 0x00	; 0
 20c:	09 2e       	mov	r0, r25
 20e:	02 c0       	rjmp	.+4      	; 0x214 <writeChar+0x172>
 210:	22 0f       	add	r18, r18
 212:	33 1f       	adc	r19, r19
 214:	0a 94       	dec	r0
 216:	e2 f7       	brpl	.-8      	; 0x210 <writeChar+0x16e>
 218:	fa 01       	movw	r30, r20
 21a:	80 81       	ld	r24, Z
 21c:	28 2b       	or	r18, r24
 21e:	20 83       	st	Z, r18
			*d3 |= (0xb<<shift);
 220:	2b e0       	ldi	r18, 0x0B	; 11
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	a9 01       	movw	r20, r18
 226:	02 c0       	rjmp	.+4      	; 0x22c <writeChar+0x18a>
 228:	44 0f       	add	r20, r20
 22a:	55 1f       	adc	r21, r21
 22c:	9a 95       	dec	r25
 22e:	e2 f7       	brpl	.-8      	; 0x228 <writeChar+0x186>
 230:	ca 01       	movw	r24, r20
 232:	98 81       	ld	r25, Y
 234:	89 2b       	or	r24, r25
 236:	88 83       	st	Y, r24
			break;
 238:	b4 c0       	rjmp	.+360    	; 0x3a2 <writeChar+0x300>
		case '5':
			*d1 |= (0x1<<shift);
 23a:	21 e0       	ldi	r18, 0x01	; 1
 23c:	30 e0       	ldi	r19, 0x00	; 0
 23e:	09 2e       	mov	r0, r25
 240:	02 c0       	rjmp	.+4      	; 0x246 <writeChar+0x1a4>
 242:	22 0f       	add	r18, r18
 244:	33 1f       	adc	r19, r19
 246:	0a 94       	dec	r0
 248:	e2 f7       	brpl	.-8      	; 0x242 <writeChar+0x1a0>
 24a:	f8 01       	movw	r30, r16
 24c:	80 81       	ld	r24, Z
 24e:	82 2b       	or	r24, r18
 250:	80 83       	st	Z, r24
			*d2 |= (0x4<<shift);
 252:	64 e0       	ldi	r22, 0x04	; 4
 254:	70 e0       	ldi	r23, 0x00	; 0
 256:	09 2e       	mov	r0, r25
 258:	02 c0       	rjmp	.+4      	; 0x25e <writeChar+0x1bc>
 25a:	66 0f       	add	r22, r22
 25c:	77 1f       	adc	r23, r23
 25e:	0a 94       	dec	r0
 260:	e2 f7       	brpl	.-8      	; 0x25a <writeChar+0x1b8>
 262:	fa 01       	movw	r30, r20
 264:	80 81       	ld	r24, Z
 266:	68 2b       	or	r22, r24
 268:	60 83       	st	Z, r22
			*d3 |= (0xb<<shift);
 26a:	4b e0       	ldi	r20, 0x0B	; 11
 26c:	50 e0       	ldi	r21, 0x00	; 0
 26e:	ba 01       	movw	r22, r20
 270:	02 c0       	rjmp	.+4      	; 0x276 <writeChar+0x1d4>
 272:	66 0f       	add	r22, r22
 274:	77 1f       	adc	r23, r23
 276:	9a 95       	dec	r25
 278:	e2 f7       	brpl	.-8      	; 0x272 <writeChar+0x1d0>
 27a:	cb 01       	movw	r24, r22
 27c:	98 81       	ld	r25, Y
 27e:	89 2b       	or	r24, r25
 280:	88 83       	st	Y, r24
			*d4 |= (0x1<<shift);
 282:	8c 91       	ld	r24, X
 284:	28 2b       	or	r18, r24
 286:	2c 93       	st	X, r18
			break;
 288:	8c c0       	rjmp	.+280    	; 0x3a2 <writeChar+0x300>
		case '6':
			*d1 |= (0x1<<shift);
 28a:	21 e0       	ldi	r18, 0x01	; 1
 28c:	30 e0       	ldi	r19, 0x00	; 0
 28e:	09 2e       	mov	r0, r25
 290:	02 c0       	rjmp	.+4      	; 0x296 <writeChar+0x1f4>
 292:	22 0f       	add	r18, r18
 294:	33 1f       	adc	r19, r19
 296:	0a 94       	dec	r0
 298:	e2 f7       	brpl	.-8      	; 0x292 <writeChar+0x1f0>
 29a:	f8 01       	movw	r30, r16
 29c:	80 81       	ld	r24, Z
 29e:	82 2b       	or	r24, r18
 2a0:	80 83       	st	Z, r24
			*d2 |= (0x4<<shift);
 2a2:	64 e0       	ldi	r22, 0x04	; 4
 2a4:	70 e0       	ldi	r23, 0x00	; 0
 2a6:	09 2e       	mov	r0, r25
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <writeChar+0x20c>
 2aa:	66 0f       	add	r22, r22
 2ac:	77 1f       	adc	r23, r23
 2ae:	0a 94       	dec	r0
 2b0:	e2 f7       	brpl	.-8      	; 0x2aa <writeChar+0x208>
 2b2:	fa 01       	movw	r30, r20
 2b4:	80 81       	ld	r24, Z
 2b6:	68 2b       	or	r22, r24
 2b8:	60 83       	st	Z, r22
			*d3 |= (0xf<<shift);
 2ba:	4f e0       	ldi	r20, 0x0F	; 15
 2bc:	50 e0       	ldi	r21, 0x00	; 0
 2be:	ba 01       	movw	r22, r20
 2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <writeChar+0x224>
 2c2:	66 0f       	add	r22, r22
 2c4:	77 1f       	adc	r23, r23
 2c6:	9a 95       	dec	r25
 2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <writeChar+0x220>
 2ca:	cb 01       	movw	r24, r22
 2cc:	98 81       	ld	r25, Y
 2ce:	89 2b       	or	r24, r25
 2d0:	88 83       	st	Y, r24
			*d4 |= (0x1<<shift);
 2d2:	8c 91       	ld	r24, X
 2d4:	28 2b       	or	r18, r24
 2d6:	2c 93       	st	X, r18
			break;
 2d8:	64 c0       	rjmp	.+200    	; 0x3a2 <writeChar+0x300>
		case '7':
			*d1 |= (0x1<<shift);
 2da:	21 e0       	ldi	r18, 0x01	; 1
 2dc:	30 e0       	ldi	r19, 0x00	; 0
 2de:	f9 01       	movw	r30, r18
 2e0:	02 c0       	rjmp	.+4      	; 0x2e6 <writeChar+0x244>
 2e2:	ee 0f       	add	r30, r30
 2e4:	ff 1f       	adc	r31, r31
 2e6:	9a 95       	dec	r25
 2e8:	e2 f7       	brpl	.-8      	; 0x2e2 <writeChar+0x240>
 2ea:	cf 01       	movw	r24, r30
 2ec:	f8 01       	movw	r30, r16
 2ee:	90 81       	ld	r25, Z
 2f0:	98 2b       	or	r25, r24
 2f2:	90 83       	st	Z, r25
			*d2 |= (0x1<<shift);
 2f4:	fa 01       	movw	r30, r20
 2f6:	90 81       	ld	r25, Z
 2f8:	98 2b       	or	r25, r24
 2fa:	90 83       	st	Z, r25
			*d3 |= (0x1<<shift);
 2fc:	98 81       	ld	r25, Y
 2fe:	89 2b       	or	r24, r25
 300:	88 83       	st	Y, r24
			break;
 302:	4f c0       	rjmp	.+158    	; 0x3a2 <writeChar+0x300>
		case '8':
			*d1 |= (0x1<<shift);
 304:	21 e0       	ldi	r18, 0x01	; 1
 306:	30 e0       	ldi	r19, 0x00	; 0
 308:	09 2e       	mov	r0, r25
 30a:	02 c0       	rjmp	.+4      	; 0x310 <writeChar+0x26e>
 30c:	22 0f       	add	r18, r18
 30e:	33 1f       	adc	r19, r19
 310:	0a 94       	dec	r0
 312:	e2 f7       	brpl	.-8      	; 0x30c <writeChar+0x26a>
 314:	f8 01       	movw	r30, r16
 316:	80 81       	ld	r24, Z
 318:	82 2b       	or	r24, r18
 31a:	80 83       	st	Z, r24
			*d2 |= (0x5<<shift);
 31c:	65 e0       	ldi	r22, 0x05	; 5
 31e:	70 e0       	ldi	r23, 0x00	; 0
 320:	09 2e       	mov	r0, r25
 322:	02 c0       	rjmp	.+4      	; 0x328 <writeChar+0x286>
 324:	66 0f       	add	r22, r22
 326:	77 1f       	adc	r23, r23
 328:	0a 94       	dec	r0
 32a:	e2 f7       	brpl	.-8      	; 0x324 <writeChar+0x282>
 32c:	fa 01       	movw	r30, r20
 32e:	80 81       	ld	r24, Z
 330:	68 2b       	or	r22, r24
 332:	60 83       	st	Z, r22
			*d3 |= (0xf<<shift);
 334:	4f e0       	ldi	r20, 0x0F	; 15
 336:	50 e0       	ldi	r21, 0x00	; 0
 338:	ba 01       	movw	r22, r20
 33a:	02 c0       	rjmp	.+4      	; 0x340 <writeChar+0x29e>
 33c:	66 0f       	add	r22, r22
 33e:	77 1f       	adc	r23, r23
 340:	9a 95       	dec	r25
 342:	e2 f7       	brpl	.-8      	; 0x33c <writeChar+0x29a>
 344:	cb 01       	movw	r24, r22
 346:	98 81       	ld	r25, Y
 348:	89 2b       	or	r24, r25
 34a:	88 83       	st	Y, r24
			*d4 |= (0x1<<shift);
 34c:	8c 91       	ld	r24, X
 34e:	28 2b       	or	r18, r24
 350:	2c 93       	st	X, r18
			break;
 352:	27 c0       	rjmp	.+78     	; 0x3a2 <writeChar+0x300>
		case '9':
			*d1 |= (0x1<<shift);
 354:	21 e0       	ldi	r18, 0x01	; 1
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	09 2e       	mov	r0, r25
 35a:	02 c0       	rjmp	.+4      	; 0x360 <writeChar+0x2be>
 35c:	22 0f       	add	r18, r18
 35e:	33 1f       	adc	r19, r19
 360:	0a 94       	dec	r0
 362:	e2 f7       	brpl	.-8      	; 0x35c <writeChar+0x2ba>
 364:	f8 01       	movw	r30, r16
 366:	80 81       	ld	r24, Z
 368:	82 2b       	or	r24, r18
 36a:	80 83       	st	Z, r24
			*d2 |= (0x5<<shift);
 36c:	65 e0       	ldi	r22, 0x05	; 5
 36e:	70 e0       	ldi	r23, 0x00	; 0
 370:	09 2e       	mov	r0, r25
 372:	02 c0       	rjmp	.+4      	; 0x378 <writeChar+0x2d6>
 374:	66 0f       	add	r22, r22
 376:	77 1f       	adc	r23, r23
 378:	0a 94       	dec	r0
 37a:	e2 f7       	brpl	.-8      	; 0x374 <writeChar+0x2d2>
 37c:	fa 01       	movw	r30, r20
 37e:	80 81       	ld	r24, Z
 380:	68 2b       	or	r22, r24
 382:	60 83       	st	Z, r22
			*d3 |= (0xb<<shift);
 384:	4b e0       	ldi	r20, 0x0B	; 11
 386:	50 e0       	ldi	r21, 0x00	; 0
 388:	ba 01       	movw	r22, r20
 38a:	02 c0       	rjmp	.+4      	; 0x390 <writeChar+0x2ee>
 38c:	66 0f       	add	r22, r22
 38e:	77 1f       	adc	r23, r23
 390:	9a 95       	dec	r25
 392:	e2 f7       	brpl	.-8      	; 0x38c <writeChar+0x2ea>
 394:	cb 01       	movw	r24, r22
 396:	98 81       	ld	r25, Y
 398:	89 2b       	or	r24, r25
 39a:	88 83       	st	Y, r24
			*d4 |= (0x1<<shift);
 39c:	8c 91       	ld	r24, X
 39e:	28 2b       	or	r18, r24
 3a0:	2c 93       	st	X, r18
		default:
			break;
	}
}
 3a2:	df 91       	pop	r29
 3a4:	cf 91       	pop	r28
 3a6:	1f 91       	pop	r17
 3a8:	0f 91       	pop	r16
 3aa:	ff 90       	pop	r15
 3ac:	ef 90       	pop	r14
 3ae:	df 90       	pop	r13
 3b0:	cf 90       	pop	r12
 3b2:	08 95       	ret

000003b4 <main>:

int main(void)
{
	CLKPR = 0x80;
 3b4:	e1 e6       	ldi	r30, 0x61	; 97
 3b6:	f0 e0       	ldi	r31, 0x00	; 0
 3b8:	80 e8       	ldi	r24, 0x80	; 128
 3ba:	80 83       	st	Z, r24
	CLKPR = 0x00;
 3bc:	10 82       	st	Z, r1
    setupLCD();
 3be:	0e 94 44 00 	call	0x88	; 0x88 <setupLCD>
	
	writeChar('0', 0);
 3c2:	60 e0       	ldi	r22, 0x00	; 0
 3c4:	70 e0       	ldi	r23, 0x00	; 0
 3c6:	80 e3       	ldi	r24, 0x30	; 48
 3c8:	0e 94 51 00 	call	0xa2	; 0xa2 <writeChar>
	writeChar('1', 1);
 3cc:	61 e0       	ldi	r22, 0x01	; 1
 3ce:	70 e0       	ldi	r23, 0x00	; 0
 3d0:	81 e3       	ldi	r24, 0x31	; 49
 3d2:	0e 94 51 00 	call	0xa2	; 0xa2 <writeChar>
	writeChar('2', 2);
 3d6:	62 e0       	ldi	r22, 0x02	; 2
 3d8:	70 e0       	ldi	r23, 0x00	; 0
 3da:	82 e3       	ldi	r24, 0x32	; 50
 3dc:	0e 94 51 00 	call	0xa2	; 0xa2 <writeChar>
	writeChar('3', 3);
 3e0:	63 e0       	ldi	r22, 0x03	; 3
 3e2:	70 e0       	ldi	r23, 0x00	; 0
 3e4:	83 e3       	ldi	r24, 0x33	; 51
 3e6:	0e 94 51 00 	call	0xa2	; 0xa2 <writeChar>
	writeChar('4', 4);
 3ea:	64 e0       	ldi	r22, 0x04	; 4
 3ec:	70 e0       	ldi	r23, 0x00	; 0
 3ee:	84 e3       	ldi	r24, 0x34	; 52
 3f0:	0e 94 51 00 	call	0xa2	; 0xa2 <writeChar>
	writeChar('5', 5);
 3f4:	65 e0       	ldi	r22, 0x05	; 5
 3f6:	70 e0       	ldi	r23, 0x00	; 0
 3f8:	85 e3       	ldi	r24, 0x35	; 53
 3fa:	0e 94 51 00 	call	0xa2	; 0xa2 <writeChar>
	writeChar('6', 0);
 3fe:	60 e0       	ldi	r22, 0x00	; 0
 400:	70 e0       	ldi	r23, 0x00	; 0
 402:	86 e3       	ldi	r24, 0x36	; 54
 404:	0e 94 51 00 	call	0xa2	; 0xa2 <writeChar>
	writeChar('7', 1);
 408:	61 e0       	ldi	r22, 0x01	; 1
 40a:	70 e0       	ldi	r23, 0x00	; 0
 40c:	87 e3       	ldi	r24, 0x37	; 55
 40e:	0e 94 51 00 	call	0xa2	; 0xa2 <writeChar>
	writeChar('8', 2);
 412:	62 e0       	ldi	r22, 0x02	; 2
 414:	70 e0       	ldi	r23, 0x00	; 0
 416:	88 e3       	ldi	r24, 0x38	; 56
 418:	0e 94 51 00 	call	0xa2	; 0xa2 <writeChar>
	writeChar('9', 3);
 41c:	63 e0       	ldi	r22, 0x03	; 3
 41e:	70 e0       	ldi	r23, 0x00	; 0
 420:	89 e3       	ldi	r24, 0x39	; 57
 422:	0e 94 51 00 	call	0xa2	; 0xa2 <writeChar>
 426:	ff cf       	rjmp	.-2      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>

00000428 <__tablejump2__>:
 428:	ee 0f       	add	r30, r30
 42a:	ff 1f       	adc	r31, r31
 42c:	05 90       	lpm	r0, Z+
 42e:	f4 91       	lpm	r31, Z
 430:	e0 2d       	mov	r30, r0
 432:	09 94       	ijmp

00000434 <_exit>:
 434:	f8 94       	cli

00000436 <__stop_program>:
 436:	ff cf       	rjmp	.-2      	; 0x436 <__stop_program>
